AWSTemplateFormatVersion: '2010-09-09'

Description: Provides Session Manager access without an Internet Gateway to an existing instance in a private subnet.

Parameters:
  EnvName:
    Type: String
    Description: 'The Environment type'
    Default: Dev

Resources:
  SSMInstanceSSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore

  SSMInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref SSMInstanceSSMRole

  # Create a dedicated role for users/groups with specific permissions
  SSMInstanceAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - iam.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore

  # Define policy with restricted permissions and reference dedicated role
  Policies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AllowCreateSpecificRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - iam:CreateRole
            Resource: !Sub "arn:${AWS::Partition}:iam::*:role/${EnvName}-*"
            Condition:
              StringLike:
                aws:PrincipalTag/Role: ${EnvName}-AdminNel
                # OR
                aws:PrincipalTag/Role: ${EnvName}-DevOpsEngineer
          - Effect: Allow
            Action:
              - iam:DetachRolePolicy
            Resource: !Sub "arn:${AWS::Partition}:iam::*:role/${EnvName}-*"
            Condition:
              StringLike:
                aws:PrincipalTag/Role: ${EnvName}-AdminNel
                # OR
                aws:PrincipalTag/Role: ${EnvName}-DevOpsEngineer

  # Attach profile to specific EC2 instances (replace with your logic)
  EC2InstanceAttachment:
    Type: AWS::IAM::InstanceProfileAssociation
    Properties:
      # InstanceId: !GetAtt MyEC2Instance.InstanceId  # Replace with your instance identifier
      InstanceProfileName: !GetAtt SSMInstanceProfile.Arn

Outputs:
  SSMInstanceSSMRoleARN:
    Description: 'The ARN of the SSM Role'
    Value: !Ref SSMInstanceSSMRole
    Export:
      Name: !Sub "${EnvName}-SSMRoleARN"

  SSMInstanceProfile:
    Description: 'The ARN of the Instance Profile'
    Value: !GetAtt SSMInstanceProfile.Arn
    Export:
      Name: !Sub "${EnvName}-SSMInstanceProfile"
